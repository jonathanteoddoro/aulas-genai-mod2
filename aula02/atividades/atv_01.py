import os
from langchain.text_splitter import CharacterTextSplitter
from langchain_openai import OpenAIEmbeddings
from langchain_community.vectorstores import Chroma
from openai import OpenAI
from langchain.schema import Document

# Configure sua chave da OpenAI aqui
os.environ["OPENAI_API_KEY"] = "sua_api_key_aqui"

# Dados mockados sobre o Inteli Academy - Liga de IA
documentos_inteli = [
    """
    O Inteli √© uma faculdade de tecnologia localizada em S√£o Paulo que se destaca pela forma√ß√£o 
    inovadora em tecnologia e neg√≥cios. A institui√ß√£o oferece cursos de gradua√ß√£o focados em ci√™ncia da 
    computa√ß√£o, engenharia de software, sistemas de informa√ß√£o e engenharia da computa√ß√£o. O Inteli adota 
    uma metodologia baseada em projetos reais, onde os estudantes trabalham em parceria com empresas 
    desde o primeiro semestre. A institui√ß√£o tem parcerias com grandes empresas como Dell, IBM, Oracle e 
    outras multinacionais, proporcionando experi√™ncias pr√°ticas aut√™nticas aos alunos.
    """,
    """
    O Inteli Academy √© uma liga de IA focada exclusivamente em 
    Intelig√™ncia Artificial e Machine Learning. Esta liga re√∫ne os estudantes mais talentosos e 
    interessados em IA do Inteli Academy, proporcionando treinamento avan√ßado, projetos de pesquisa e desenvolvimento 
    de solu√ß√µes inovadoras. Os membros da Liga de IA participam de competi√ß√µes nacionais e 
    internacionais, desenvolvem papers acad√™micos e trabalham em projetos de ponta com tecnologias 
    emergentes como GPT, computer vision, processamento de linguagem natural e redes neurais profundas. 
    A liga tamb√©m organiza eventos, workshops e palestras com especialistas da ind√∫stria.
    """,
    """
    Os projetos desenvolvidos pelos estudantes do Inteli Academy s√£o sempre baseados em problemas 
    reais de empresas parceiras. Na Liga de IA, os projetos incluem sistemas de recomenda√ß√£o, 
    chatbots inteligentes, an√°lise preditiva, vis√£o computacional para automa√ß√£o industrial, 
    processamento de linguagem natural para an√°lise de sentimentos, e desenvolvimento de modelos 
    de machine learning para otimiza√ß√£o de processos empresariais. Os alunos trabalham com 
    frameworks modernos como TensorFlow, PyTorch, Scikit-learn e ferramentas de MLOps como MLflow 
    e Kubeflow. Cada projeto tem dura√ß√£o de um semestre e resulta em solu√ß√µes funcionais que s√£o 
    apresentadas para as empresas parceiras.
    """,
    """
    A metodologia do Inteli Academy √© centrada no aprendizado por projetos (PBL - Project Based Learning). 
    Os estudantes trabalham em equipes multidisciplinares para resolver desafios reais apresentados por 
    empresas parceiras. Cada semestre √© organizado em torno de um projeto principal, complementado por 
    aulas te√≥ricas e workshops pr√°ticos. A Liga de IA, como programa do Inteli Academy, segue essa mesma metodologia, mas com foco 
    espec√≠fico em desafios de intelig√™ncia artificial. Os professores atuam como mentores e facilitadores, 
    guiando os estudantes no processo de descoberta e solu√ß√£o de problemas. Esta abordagem desenvolve 
    n√£o apenas compet√™ncias t√©cnicas, mas tamb√©m habilidades de trabalho em equipe, comunica√ß√£o e 
    pensamento cr√≠tico.
    """,
    """
    O Inteli Academy foi fundado com a miss√£o de revolucionar o ensino superior em tecnologia no Brasil. 
    A institui√ß√£o nasceu da percep√ß√£o de que o mercado de trabalho demanda profissionais que combinem 
    excel√™ncia t√©cnica com vis√£o de neg√≥cios e capacidade de inova√ß√£o. O campus do Inteli Academy √© equipado 
    com laborat√≥rios de √∫ltima gera√ß√£o, incluindo labs de IA, rob√≥tica, IoT e realidade virtual. 
    A Liga de IA, como programa especial do Inteli Academy, tem acesso a recursos computacionais avan√ßados, incluindo GPUs para treinamento de 
    modelos de deep learning e plataformas cloud para desenvolvimento e deployment de solu√ß√µes de IA. 
    A institui√ß√£o mant√©m um forte foco na empregabilidade, com taxa de emprego dos formandos pr√≥xima 
    a 100% em grandes empresas de tecnologia.
    """
]

# Implementa√ß√£o RAG Simples - Baseada no exemplo da aula02.md
print("üîç Sistema RAG - Inteli Academy & Liga de IA")
print("=" * 50)

print("üìö Carregando documentos...")

# Divis√£o em chunks usando CharacterTextSplitter (como no exemplo da aula)
text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=200)

# Criar documentos a partir dos textos
documents = [Document(page_content=doc) for doc in documentos_inteli]

# Dividir os documentos em chunks (como no exemplo da aula)
texts = text_splitter.split_documents(documents)
print(f"‚úÇÔ∏è Criados {len(texts)} fragmentos de texto")

# Cria√ß√£o de embeddings e base vetorial (como no exemplo da aula)
embeddings = OpenAIEmbeddings()
vectorstore = Chroma.from_documents(texts, embeddings)
print("üéØ Base vetorial criada com sucesso!")

# Cliente OpenAI para RAG manual
client = OpenAI(api_key=os.environ["OPENAI_API_KEY"])

def buscar_resposta_rag(pergunta, vectorstore):
    """Implementa√ß√£o RAG manual usando diretamente a OpenAI"""
    # Recuperar documentos relevantes
    docs = vectorstore.similarity_search(pergunta, k=3)
    
    # Construir contexto a partir dos documentos recuperados
    contexto = "\n\n".join([doc.page_content for doc in docs])
    
    # Criar prompt estruturado
    prompt = f"""Baseado nas informa√ß√µes fornecidas sobre o Inteli Academy, responda √† pergunta de forma precisa e detalhada.

    CONTEXTO:
    {contexto}

    PERGUNTA: {pergunta}

    INSTRU√á√ïES:
    - Use apenas as informa√ß√µes do contexto fornecido
    - Seja espec√≠fico e preciso na resposta
    - Se a informa√ß√£o n√£o estiver no contexto, informe que n√£o foi encontrada

    RESPOSTA:"""

    # Chamada para OpenAI Chat Completions
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "Voc√™ √© um assistente especializado em responder perguntas sobre o Inteli Academy baseado apenas nos documentos fornecidos."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.3,
        max_tokens=500
    )
    
    return response.choices[0].message.content

print("\n‚úÖ Sistema RAG iniciado com sucesso!")

print("\n" + "=" * 50)
print("Digite suas perguntas (ou 'sair' para encerrar):")

# Loop principal para perguntas
while True:
    print("\n" + "-" * 30)
    pergunta = input("ü§î Sua pergunta: ").strip()
    
    if "sair" in pergunta.lower():
        print("üëã Encerrando sistema RAG. At√© logo!")
        break

    # Uso do RAG manual com OpenAI direta
    resposta = buscar_resposta_rag(pergunta, vectorstore)
    
    print("\nüìù Resposta:")
    print(f"{resposta}")
        